version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["npm", "run", "dev"]
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-super-secret-key-change-this-in-production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./storage:/app/storage
      - app_data:/app/data
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - multifamily_network

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - multifamily_network
    command: redis-server --appendonly yes

  # Optional: Add PostgreSQL for production database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=multifamily_db
      - POSTGRES_USER=multifamily_user
      - POSTGRES_PASSWORD=multifamily_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - multifamily_network

  # Optional: Add nginx for production reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "9080:80"
      - "9443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - multifamily_network
    profiles:
      - with-nginx

volumes:
  app_data:
  redis_data:
  postgres_data:

networks:
  multifamily_network:
    driver: bridge